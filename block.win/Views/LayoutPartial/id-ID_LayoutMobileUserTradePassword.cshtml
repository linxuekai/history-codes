
@{
    ViewBag.Title = "Trade Password";
    Layout = "~/Views/Shared/_id-ID_Layout.cshtml";
}

<style>
    .goBack {
        position: fixed;
        left: 16px;
        top: 12px;
        padding-right: 50px;
        z-index: 1000;
    }

    .acoountSet {
        display: none;
    }
</style>
<a href="../Account/MyInvitation" class="goBack p-l-14">
    <img class="w-10" src="~/images/Img/goBack.png" />
</a>

<div id="app">

    <div v-cloak v-if="isChange===true">
        <div class="c-000 f-s-14 p-lr-16 h-40 l-h-40 bg-255 ps-relative">
            <input type="password" class="border-none h-39 bg-255 w100" v-model="changeTradePassword.OldPassword" :placeholder="holder.o" />
        </div>
        <div class="c-000 f-s-14 p-lr-16 m-t-16 h-40 l-h-40 bg-255 ps-relative">

            <input type="password" class="border-none h-39 bg-255 w100" v-model="changeTradePassword.Password" :placeholder="holder.t" />
        </div>
        <div class="c-000 f-s-14 p-lr-16 m-t-16 h-40 l-h-40 bg-255 ps-relative">

            <input type="password" class="border-none h-39 bg-255 w100" v-model="changeTradePassword.ConfirmPassword" :placeholder="holder.s" />
        </div>


        <div class="m-t-16 p-lr-16">
            <button class="border-none bg-10ADE4 c-255 f-s-14 h-40 l-h-40 d-s-i-b w100 border-radius-4" @@click="save">Save</button>
        </div>

        <div class="m-t-10 text-right p-lr-12">
            <a @@click="gotoForgotPassword" class="c-10ADE4 f-s-12">Forgot Trade Password</a>
        </div>
    </div>

    <div v-cloak v-if="isReset===true">
        <div class="c-000 f-s-14 p-lr-16 h-40 l-h-40 bg-255 ps-relative">
            <input type="text" class="p-tb-6 h-40 w48 border-none" placeholder="Mailbox Verification  Code" v-model="forgotTradePassword.Code">
            <button class="c-255 border-none h-40 d-s-i-b w48 f-r border-radius-4" v-bind:class="{'bg-10ADE4':isClickSendFgEmail,'bg-ccc':isClickSendFgEmailNo}" :disabled="disabled" @@click="SendForgotTradePasswordEmail" v-text="sendEmailBtn.text"></button>
        </div>
        <div class="c-000 f-s-14 p-lr-16 m-t-16 h-40 l-h-40 bg-255 ps-relative">

            <input type="password" class="border-none h-39 bg-255 w100" v-model="forgotTradePassword.Password" placeholder="Trade Password" />
        </div>
        <div class="c-000 f-s-14 p-lr-16 m-t-16 h-40 l-h-40 bg-255 ps-relative">
            <input type="password" class="border-none h-39 bg-255 w100" v-model="forgotTradePassword.ConfirmPassword" placeholder="Confirm Trade Password" />
        </div>

        <div class="m-t-16 p-lr-16">
            <button class="border-none bg-10ADE4 c-255 f-s-14 h-40 l-h-40 d-s-i-b w100 border-radius-4" @@click="ForgotTradePassword">Submit</button>
        </div>

        <div class="m-t-10 text-right p-lr-12">
            <a @@click="gotoChangePassword" class="c-10ADE4 f-s-12">Change Trade Password</a>
        </div>
    </div>

</div>

@Html.AntiForgeryToken()

<script>
    var app = new Vue({
        el: '#app',
        data: {
            initTradePassword: {
                __RequestVerificationToken: getToken(),
                OldPassword: '',
                Password: '',
                ConfirmPassword: '',
            },
            changeTradePassword: {
                __RequestVerificationToken: getToken(),
                OldPassword: '',
                Password: '',
                ConfirmPassword: '',
            },
            sendForgotTradePasswordEmail: {
                __RequestVerificationToken: getToken(),
                Lang: 'en-US',
            },
            forgotTradePassword: {
                __RequestVerificationToken: getToken(),
                Code: '',
                Password: '',
                ConfirmPassword: ''
            },
            sendEmailBtn: {
                text: 'Send PIN Code',
                bg: true
            },
            holder: {
                o: '',
                t: '',
                s: ''
            },
            isClick: true,
            disabled: false,
            isChange: true,
            isReset: false,
            isTradePassword: '',
            isClickSendFgEmail: true,
            isClickSendFgEmailNo: false,
        },
        mounted: function () {
            var TradePasswordIsSet = $('#TradePasswordIsSet').text();
            if (TradePasswordIsSet === 'True') {
                TradePasswordIsSet = true;
            }
            this.isTradePassword = TradePasswordIsSet;
            if (this.isTradePassword === true) {
                this.holder = {
                    o: 'Old Trade Password',
                    t: 'New Trade Password',
                    s: 'Confirm New Trade Password'
                };
                @{
                    ViewBag.Title = "Change Trade Password";
                }
            } else {
                this.holder = {
                    o: 'Login Password',
                    t: 'Trade Password',
                    s: 'Confirm Trade Password'
                };
                @{
                    ViewBag.Title = "Setting Trade Password";
                }
            }
        },

        methods: {
            gotoForgotPassword: function () {
                this.isChange = false;
                this.isReset = true;
                @{
                    ViewBag.Title = "Forgot Trade Password";
                }
            },
            gotoChangePassword: function () {
                this.isChange = true;
                this.isReset = false;
                @{
                    ViewBag.Title = "Change Trade Password";
                }
            },

            save: function () {
                if (this.isTradePassword === true) {
                    this.ChangeTradePassword();
                } else {
                    this.InitTradePassword();
                }
            },

            InitTradePassword:function() {
                var _this = this;
                if (!this.changeTradePassword.OldPassword) {
                    showTips('Please Enter Your Login Password');
                    return;
                }
                if (!this.changeTradePassword.Password) {
                    showTips('Please Enter Your Trade Password');
                    return;
                }
                if (!this.changeTradePassword.ConfirmPassword) {
                    showTips('Please Confirm Your Trade Password');
                    return;
                }
                server.InitTradePassword(this.changeTradePassword, function (rel) {
                    switch (rel.msg) {
                        case 'StatusOk': {
                            showTips('Set Successfully');
                            _this.changeTradePassword.OldPassword = '';
                            _this.changeTradePassword.Password = '';
                            _this.changeTradePassword.ConfirmPassword = '';
                            setTimeout(function () {
                                window.location.href = host + 'en-US/Account/MyInvitation';
                            },1500)

                            break;
                        }
                        case rel.msg: {
                            showTips(getDescript(rel.msg));
                            break;
                        }
                        default: {
                            showTips('Operation failed, error code：' + rel.msg);
                        }
                    }
                })
            },

            ChangeTradePassword: function () {
                var _this = this;
                if (!this.changeTradePassword.OldPassword) {
                    showTips('Please Enter The Old Trade Password');
                    return;
                }
                if (!this.changeTradePassword.Password) {
                    showTips('Please Enter The New Trade Password');
                    return;
                }
                if (!this.changeTradePassword.ConfirmPassword) {
                    showTips('Please Confirm The New Trade Password');
                    return;
                }
                server.ChangeTradePassword(this.changeTradePassword, function (rel) {
                    switch (rel.msg) {
                        case 'StatusOk': {
                            showTips('Modify Successfully');
                            _this.changeTradePassword.OldPassword = '';
                            _this.changeTradePassword.Password = '';
                            _this.changeTradePassword.ConfirmPassword = '';
                            setTimeout(function () {
                                window.location.href = host + 'en-US/Account/MyInvitation';
                            }, 1500)
                            break;
                        }
                        case rel.msg: {
                            showTips(getDescript(rel.msg));
                            break;
                        }
                        default:{
                            showTips('Operation failed, error code：'+rel.msg);
                        }
                    }
                })
            },

            SendForgotTradePasswordEmail: function () {
                var _this = this;
                server.SendForgotTradePasswordEmail(this.sendForgotTradePasswordEmail, function (rel) {
                    switch (rel.msg) {
                        case 'StatusOk': {
                            var countdown = countDown;
                            _this.disabled = true;
                            _this.isClickSendFgEmail = false;
                            _this.isClickSendFgEmailNo = true;
                            _this.cd = setInterval(function () {
                                _this.sendEmailBtn.text = countdown + 'S';
                                if (countdown == 0) {
                                    clearInterval(_this.cd);
                                    _this.disabled = false;
                                    _this.isClickSendFgEmail = true;
                                    _this.isClickSendFgEmailNo = false;
                                    _this.sendEmailBtn.text = 'Send PIN Code';
                                }
                                countdown--;
                            }, 1000);
                            break;
                        }
                        case rel.msg: {
                            showTips(getDescript(rel.msg));
                            break;
                        }
                        default: {
                            showTips('Operation failed, error code：' + rel.msg);
                        }
                    }
                })
            },

            ForgotTradePassword: function () {
                var _this = this;
                if (!this.forgotTradePassword.Code) {
                    showTips('Please Enter The Verification Code');
                    return;
                }
                if (!this.forgotTradePassword.Password) {
                    showTips('Please Enter The Trade Code');
                    return;
                }
                if (!this.forgotTradePassword.ConfirmPassword) {
                    showTips('Please Confirm The Verification Code');
                    return;
                }
                server.ForgotTradePassword(this.forgotTradePassword, function (rel) {
                    switch (rel.msg) {
                        case 'StatusOk': {
                            showTips('Reset Trade Password Success');
                            _this.forgotTradePassword.Code = '';
                            _this.forgotTradePassword.Password = '';
                            _this.forgotTradePassword.ConfirmPassword = '';
                            setTimeout(function () {
                                window.location.href = host + 'en-US/Account/MyInvitation';
                            }, 1500)
                            break;
                        }
                        case rel.msg: {
                            showTips(getDescript(rel.msg));
                            break;
                        }
                        default: {
                            showTips('Operation failed, error code：' + rel.msg);
                        }
                    }
                })
            }

        }
    })





</script>