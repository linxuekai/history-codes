@{ViewBag.Title = "Profit Details";Layout = "~/Views/Shared/_id-ID_Layout.cshtml";} @Html.AntiForgeryToken()

<link rel="stylesheet"
      href="../../Content/eleme-css/index.css">

<style>
    #app {
        font-family: "Microsoft YaHei UI", sans-serif;
        padding: 15px;
        background: white;
    }

    .tab-a {
        width: 180px;
        text-align: center;
        font-size: 16px;
    }

    #navtab .active > .tab-a {
        background: #428bca;
        color: white;
    }

    .filter-bar {
        padding: 10px 10px;
    }

    .filter-bar .el-date-editor--date {
        font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
        text-align: center;
        display: inline-block;
        width: 117px;
    }

    .selector {
        display: inline-block;
        margin: 8px 8px 0 0;
    }
    .end-date-picker{
        margin-right: 8px;
    }
    table.text-center th {
        text-align: center;
    }
    .query-btn{
        margin-top:8px;
    }

    @@media screen and (max-width: 768px){
        #app{
            padding:0;
        }
        .selector {
            margin: 5px 2px 0 0;
        }
        .end-date-picker{
            margin-right: 2px;
        }
        .query-btn{
            margin-top:0;
        }
        .pc-show{
            display: none;
        }
        .row{
            margin: 0;
        }
        .tab-content,.col-xs-12{
            padding: 0;
        }
    }
</style>

<div id="app">
    <div class="container-fluid">
        <div class="row">
            <div class="col-xs-12">
                <ul class="nav nav-tabs"
                    id="navtab">
                    <li>
                        <a href="#generation"
                           id="showGeneration"
                           data-toggle="tab"
                           @@click.once="openGeneration"
                           class="tab-a">
                            Generations Team
                        </a>
                    </li>
                    <li>
                        <a href="#team"
                           id="showTeam"
                           data-toggle="tab"
                           @@click="openTeam"
                           class="tab-a">
                            Whole Team
                        </a>
                    </li>
                </ul>
                <div class="col-sm-12  tab-content">
                    <div class="tab-pane"
                         id="generation">
                        <div class="filter-bar">
                            <el-date-picker
                              placeholder="Start time"
                              format="yyyy/MM/dd"
                              v-model="generationFilter.StartTime"
                              :picker-options="StDateOptions"
                              @@change="GStartTimeCg"
                            ></el-date-picker>
                            <span class="glyphicon glyphicon-resize-horizontal"></span>
                            <el-date-picker
                              placeholder="End time"
                              format="yyyy/MM/dd"
                              :disabled="!generationFilter.StartTime"
                              :picker-options="grEdDateOptions"
                              v-model="generationFilter.EndTime"
                              @@change="GEndTimeCg"
                              class="end-date-picker"
                            ></el-date-picker>
                            <div class="selector">
                                <el-select
                                  style="width: 75px;"
                                  v-model="generationFilter.LayoutIndex">
                                    <el-option
                                      v-for="obj in generationOptions"
                                      :key="obj.value"
                                      :value="obj.value"
                                      :label="obj.label"
                                    ></el-option>
                                </el-select>
                            </div>
                            <div class="selector">
                                <el-select
                                  style="width: 120px;"
                                  v-model="generationFilter.Type">
                                    <el-option
                                      v-for="obj in TypeOptions"
                                      :key="obj.value"
                                      :label="obj.label"
                                      :value="obj.value"
                                    ></el-option>
                                </el-select>
                            </div>
                            <div class="selector">
                                <el-input
                                  placeholder="Username"
                                  style="width: 100px;"
                                  v-model="generationFilter.QuerySCName"
                                ></el-input>
                            </div>
                            <el-button type="primary"
                                       class="query-btn"
                                       :disabled="!!generationFilter.StartTime !== !!generationFilter.EndTime"
                                       @@click="generationQuery">Screen
                            </el-button>
                        </div>
                        <table class="table table-striped text-center">
                            <thead>
                            <tr>
                                <th class="pc-show">#</th>
                                <th>User</th>
                                <th class="pc-show">ID</th>
                                <th>Register Date</th>
                                <th>Package</th>
                                <th>Bonus</th>
                            </tr>
                            </thead>
                            <tbody>
                            <tr v-for="(item, idx) in generationIncome"
                                :key="idx">
                                <td class="pc-show">{{idx+1}}</td>
                                <td>{{item.NickName}}</td>
                                <td class="pc-show">{{item.UserName}}</td>
                                <td>{{item.SetupTime.slice(0,11)}}</td>
                                <td>{{item.IncomePercent}}</td>
                                <td>{{item.Income}}</td>
                            </tr>
                            </tbody>
                        </table>
                        <infinite-loading :on-infinite="grOnInfinite"
                                          ref="grInfiniteLoading"
                                          v-if="generationInfiniteReady">
              <span slot="no-results">
                No bonus record
              </span>
                            <span slot="no-more">
                The above is the data of bonus to be screened
              </span>
                        </infinite-loading>
                        <div class="row m-t-10 m-l-6">
                            <div class="col-md-12 col-lg-12 col-ms-12 col-xs-12 l-h-28 c-999 f-s-12">
                                <div class="f-s-14">Notes:</div>
                                BDP：Bonus for Direct purchase <br>
                                DBBDP：Difference Bonus between Direct purchase<br>
                                BDG：Bonus for Direct Generations<br>
                                BTM：Bonus for Team Management<br>
                                AA：Accumulated amount<br>
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane"
                         id="team">
                        <div class="filter-bar">
                            <el-date-picker
                              placeholder="Start time"
                              format="yyyy/MM/dd"
                              v-model="teamFilter.StartTime"
                              :picker-options="StDateOptions"
                              @@change="TStartTimeCg"
                            ></el-date-picker>
                            <span class="glyphicon glyphicon-resize-horizontal"></span>
                            <el-date-picker
                              placeholder="End time"
                              format="yyyy/MM/dd"
                              :disabled="!teamFilter.StartTime"
                              :picker-options="tmEdDateOptions"
                              v-model="teamFilter.EndTime"
                              @@change="TEndTimeCg"
                              class="end-date-picker"
                            ></el-date-picker>
                            <div class="selector">
                                <el-select
                                  placeholder="level"
                                  style="width: 90px;"
                                  v-model="teamFilter.LayoutIndex">
                                    <el-option
                                      v-for="obj in levelOptions"
                                      :key="obj.value"
                                      :value="obj.value"
                                      :label="obj.label"
                                    ></el-option>
                                </el-select>
                            </div>
                            <div class="selector">
                                <el-input
                                  placeholder="Username"
                                  style="width: 100px;"
                                  v-model="teamFilter.QuerySCName"
                                ></el-input>
                            </div>
                            <el-button type="primary"
                                       class="query-btn"
                                       :disabled="!!teamFilter.StartTime !== !!teamFilter.EndTime"
                                       @@click="teamQuery">Screen
                            </el-button>
                        </div>
                        <table class="table table-striped text-center">
                            <thead>
                            <tr>
                                <th class="pc-show">#</th>
                                <th>User</th>
                                <th class="pc-show">ID</th>
                                <th>Register Date</th>
                                <th>ratio</th>
                                <th>Bonus</th>
                            </tr>
                            </thead>
                            <tbody>
                            <tr v-for="(item, idx) in teamIncome"
                                :key="idx">
                                <td class="pc-show">{{idx+1}}</td>
                                <td>{{item.NickName}}</td>
                                <td class="pc-show">{{item.UserName}}</td>
                                <td>{{item.SetupTime.slice(0,11)}}</td>
                                <td>{{(item.IncomePercent * 100) + '%'}}</td>
                                <td>{{item.Income}}</td>
                            </tr>
                            </tbody>
                        </table>
                        <infinite-loading :on-infinite="tmOnInfinite"
                                          ref="tmInfiniteLoading"
                                          v-if="teamInfiniteReady">
              <span slot="no-results">
                No bonus record
              </span>
                            <span slot="no-more">
                The above is the data of bonus to be screened
              </span>
                        </infinite-loading>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="../../Scripts/element-ui.js"></script>
<script src="../../Scripts/vue-infinite-loading.js"></script>

<script>
    /* global Vue getToken */
		var app = new Vue({
			el: '#app',
			data: function() {
				return {
					token: getToken(),
					generationInfiniteReady: false,
					teamInfiniteReady: false,
					generationFilter: {
						StartTime: null,
						EndTime: null,
						LayoutIndex: 1,
						QuerySCName: '',
						PageIndex: '',
						ShowNumber: '',
						Type: 1
					},
					teamFilter: {
						StartTime: null,
						EndTime: null,
						LayoutIndex: 0,
						QuerySCName: '',
						PageIndex: '',
						ShowNumber: '',
						Type: 5
					},
					generationOptions: [
						{label: 'Ｇ１', value: 1},
						{label: 'Ｇ２', value: 2},
						{label: 'Ｇ３', value: 3},
						{label: 'Ｇ４', value: 4},
						{label: 'Ｇ５', value: 5},
						{label: 'Ｇ６', value: 6}
					],
					levelOptions:[
						{label: 'All', value: 0},
						{label: 'ＢＲ', value: 1},
						{label: 'ＪＢＲ', value: 2},
						{label: 'ＳＢＲ', value: 3},
						{label: 'ＩＳ', value: 4},
						{label: 'ＡＤ', value: 5},
						{label: 'ＩＰ', value: 6}
					],
					TypeOptions: [
						{label: 'BDP', value: 1},
						{label: 'DBBDP', value: 2},
						{label: 'BDG', value: 3}
					],
					generationIncome: [],
					teamIncome: [],
					generationRequestPage: 1,
					teamRequestPage: 1,
					StDateOptions: {
						disabledDate: function(time) {
							return time.getTime() > Date.now()
						}
					}
				}
			},
			computed: {

				grEdDateOptions:function() {
					return {
						disabledDate: function(time) {
							var now = new Date()
							var minDate = new Date(app.generationFilter.StartTime)
							return time > now || time < minDate
						}
					}
				},
				tmEdDateOptions:function() {
					return {
						disabledDate: function(time) {
							var now = new Date()
							var minDate = new Date(app.teamFilter.StartTime)
							return time > now || time < minDate
						}
					}
				}
			},
			methods: {
				openGeneration() {
					this.generationInfiniteReady = true
				},
				openTeam() {
					this.teamInfiniteReady = true
				},
				generationQuery: function() {
					this.generationIncome = []
					this.generationRequestPage = 1
					this.$refs.grInfiniteLoading.$emit('$InfiniteLoading:reset')
				},
				teamQuery: function() {
					this.teamIncome = []
					this.teamRequestPage = 1
					this.$refs.tmInfiniteLoading.$emit('$InfiniteLoading:reset')
				},
				GStartTimeCg: function(d) {
					this.generationFilter.StartTime = d
					var sTime = this.generationFilter.StartTime
					var eTime = this.generationFilter.EndTime
					if (!sTime || new Date(sTime) >= new Date(eTime || null)) {
						this.generationFilter.EndTime = null
					}
				},
				GEndTimeCg: function(d) {
					this.generationFilter.EndTime = d
				},
				TStartTimeCg: function(d) {
					this.teamFilter.StartTime = d
					var sTime = this.teamFilter.StartTime
					var eTime = this.teamFilter.EndTime
					if (!sTime || new Date(sTime) >= new Date(eTime || null)) {
						this.teamFilter.EndTime = null
					}
				},
				TEndTimeCg: function(d) {
					this.teamFilter.EndTime = d
				},
				grOnInfinite: function() {
					this.takeGenerationIncome().then(function(res) {
						res.msg === 'StatusOk' && res.data.data.length
							? app.$refs.grInfiniteLoading.$emit('$InfiniteLoading:loaded')
							: app.$refs.grInfiniteLoading.$emit('$InfiniteLoading:complete')
					})
				},
				tmOnInfinite: function() {
					this.takeAllianceIncome().then(function(res) {
						res.msg === 'StatusOk' && res.data.data.length
							? app.$refs.tmInfiniteLoading.$emit('$InfiniteLoading:loaded')
							: app.$refs.tmInfiniteLoading.$emit('$InfiniteLoading:complete')
					})
				},
				takeGenerationIncome: function() {
					var gF = this.generationFilter
					return $.post('/Finance/TakeGenIncome', {
						__RequestVerificationToken: this.token,
						StartTime: gF.StartTime,
						EndTime: gF.EndTime,
						LayoutIndex: gF.LayoutIndex,
						QuerySCName: gF.QuerySCName,
						PageIndex: this.generationRequestPage++,
						ShowNumber: 10,
						Type: gF.Type
					}).then(
						function(res) {
							if (res.msg === 'StatusOk') {
								res.data.data.forEach(function(item) {
									app.generationIncome.push(item)
								})
							} else if (res.msg === 'UserNeedLogin') {
								app.$message.warning(getDescript(res.msg))

							}
							return res
						},
						function() {
							app.$message.error(getDescript(res.msg))
						}
					)
				},
				takeAllianceIncome: function() {
					var tm = this.teamFilter
					return $.post('/Finance/TakeAllianceIncome', {
						__RequestVerificationToken: this.token,
						StartTime: tm.StartTime,
						EndTime: tm.EndTime,
						LayoutIndex: tm.LayoutIndex,
						QuerySCName: tm.QuerySCName,
						PageIndex: this.teamRequestPage++,
						ShowNumber: 10,
						Type: tm.Type
					}).then(
						function(res) {
							if (res.msg === 'StatusOk') {
								res.data.data.forEach(function(item) {
									app.teamIncome.push(item)
								})
							} else if (res.msg === 'UserNeedLogin') {
								app.$message.warning(getDescript(res.msg))
							}
							return res
						},
						function() {
							app.$message.error(getDescript(res.msg))
						}
					)
				}

			},
			created: function() {
				var $showGeneration = $('#showGeneration')
				var gF = this.generationFilter
				var tF = this.teamFilter
				if (/^2\d{3}-(0[1-9]|1[012])&(0[123]|15)$/.test(window.location.search.slice(1))) {
					var search = window.location.search.slice(1)
					var StarTime = search.slice(0, 7) + '-' + '01'
					var EndTime = search.slice(0, 7) + '-' + new Date(search.slice(0, 4), search.slice(5, 7), 0).getDate()
					var queryType = search.slice(-2)
					switch (queryType) {
						case '01':
						case '02':
						case '03':
							$showGeneration.tab('show')
							gF.StartTime = StarTime
							gF.EndTime = EndTime
							gF.LayoutIndex = 1
							gF.Type = parseInt(queryType)
							this.generationInfiniteReady = true // 开始获取Generation数据
							break
						case '15':
							$('#showTeam').tab('show')
							tF.StartTime = StarTime
							tF.EndTime = EndTime
							this.teamInfiniteReady = true // 开始获取Team数据
							break
					}
				} else {
					$showGeneration.tab('show')
					this.generationInfiniteReady = true // 开始获取Generation数据
				}
			}
		})
</script>