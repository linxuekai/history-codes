@{
Layout = "~/Views/Shared/_en-US_ManageLayout.cshtml";
ViewBag.Title = "币兑币";
}

<link href="~/Content/eleme-css/date-picker.css" rel="stylesheet" />
<link href="~/Content/eleme-css/select.css" rel="stylesheet" />
<link href="~/Content/eleme-css/base.css" rel="stylesheet" />
<link href="~/Content/eleme-css/button.css" rel="stylesheet" />
<style>
    ::-ms-clear, ::-ms-reveal {
        display: none;
    }

    [v-cloak] {
        display: none !important;
    }

    .main {
        width: 1200px;
        margin: 0 auto;
        padding:10px;
        background: #eef1f6;
    }
    .main .table {
        margin-bottom:0;
    }
    .detail,.total {
        background:#fff;
    }
    #showTips {
        z-index: 9999;
    }

    .el-loading-mask {
        z-index: 1;
    }
    /*table*/
    .table tbody tr th, .table tbody tr td {
        text-align: center;
    }
    /*screen*/
    .el-input{
        width:180px;
        display:inline-block;
    }
    /*pagin*/
    .pagin {
        float: right;
        padding: 2px 33px 5px 0;
    }
    /*color*/
    .red{
        color:red;
    }
    .green{
        color:green;
    }
    @@media screen and (max-width: 768px){
        .orginCoin {
            left: 194px !important;
        }

        .deskCoin {
            left: 378px !important;
        }

        .timepick {
            left: 562px !important;
        }
    }
    .spinner {
        margin: 5px auto 0;
        width: 150px;
        text-align: center;
    }

    .spinner > div {
        width: 20px;
        height: 20px;
        background-color: #004a7c;

        border-radius: 100%;
        display: inline-block;
        -webkit-animation: bouncedelay 1.4s infinite ease-in-out;
        animation: bouncedelay 1.4s infinite ease-in-out;
        /* Prevent first frame from flickering when animation starts */
        -webkit-animation-fill-mode: both;
        animation-fill-mode: both;
    }

    .spinner .bounce1 {
        -webkit-animation-delay: -0.32s;
        animation-delay: -0.32s;
    }

    .spinner .bounce2 {
        -webkit-animation-delay: -0.16s;
        animation-delay: -0.16s;
    }

    @@-webkit-keyframes bouncedelay {
         0%, 80%, 100% { -webkit-transform: scale(0.0) }
         40% { -webkit-transform: scale(1.0) }
     }

    @@keyframes bouncedelay {
         0%, 80%, 100% {
             transform: scale(0.0);
             -webkit-transform: scale(0.0);
         } 40% {
               transform: scale(1.0);
               -webkit-transform: scale(1.0);
           }
     }
</style>

<div id="app">
    <div id="top" style="position: absolute;top:0"></div>
    <div class="main">
        <div class="total">
            <table class="table table-hover table-bordered" v-loading="!exchangeSum">
                <tr>
                    <th>币种</th>
                    <th>转入数量</th>
                    <th>转出数量</th>
                    <th>结算</th>
                </tr>
                <tr v-for="x in exchangeSum">
                    <td v-text="x.ExchangeCoin"></td>
                    <td v-text="x.SourceTotal"></td>
                    <td v-text="x.DestTotal"></td>
                    <td :class="[(x.SourceTotal-x.DestTotal)<0?'red':'green']" v-cloak>{{x.SourceTotal-x.DestTotal}}</td>
                </tr>
            </table>
        </div>

        <div style="margin:16px 0 8px 0" >
            <el-input v-model="screen.Name" size="small" placeholder="输入用户名"></el-input>
            <el-select v-model="screen.SourceCoinType" size="small" clearable placeholder="原始币种" popper-class="orginCoin">
                <el-option v-for="item in options"
                           :key="item.coin"
                           :label="item.coin"
                           :value="item.coin">
                </el-option>
            </el-select>
            <el-select v-model="screen.DestCoinType" size="small" clearable placeholder="目标币种"  popper-class="deskCoin">
                <el-option v-for="item in options"
                           :key="item.coin"
                           :label="item.coin"
                           :value="item.coin"
                           popper-class="deskCoin">
                </el-option>
            </el-select>
            <el-date-picker v-model="time"
                            size="small"
                            type="daterange"
                            placeholder="选择日期范围"
                            popper-class="timepick"
                            @@change="chooseTime">
            </el-date-picker>
            <el-button type="danger" size="small" icon="search" @@click="screen1">筛选</el-button>
        </div>

        <div class="clearfix" v-infinite-scroll="loadMore" infinite-scroll-disabled="busy" infinite-scroll-distance="10">
            <table class="table table-hover table-bordered detail">
                <tr>
                    <th>用户</th>
                    <th>日期</th>
                    <th>转出币种</th>
                    <th>转出数量</th>
                    <th>目标币种</th>
                    <th>目标币数</th>
                    <th>手续费</th>
                </tr>
                <tr v-for="x in exchangelist">
                    <td v-text="x.UserName"></td>
                    <td v-text="x.TxDate"></td>
                    <td v-text="x.CoinType"></td>
                    <td v-text="x.Amt"></td>
                    <td v-text="x.DestCoinType"></td>
                    <td v-text="x.DestAmt"></td>
                    <td v-text="x.Fee"></td>
                </tr>
            </table>
            <div class="spinner" v-if="!busy">
                <div class="bounce1"></div>
                <div class="bounce2"></div>
                <div class="bounce3"></div>
            </div>
            <div v-if="over" style="color:#666;text-align: center" v-text="'以上为所有数据。'"></div>
        </div>

        <div style="position: fixed;right: 1%;bottom:1%;width: 110px">
            <a href="#top" style="padding: 17px;display: block;border-radius: 50%;background: #fff;margin: 10px auto;width: 50px;height: 50px;">
                <i class="el-icon-arrow-up"></i>
            </a>
            <el-button type="primary" icon="arrow-down" @@click="downloadExl">
                <span v-text="'导出表格'"></span>
            </el-button>
        </div>
    </div>
</div>
@Html.AntiForgeryToken()
<script src="../../Scripts/element-ui.js"></script>
<script src="../../Scripts/vue-infinite-scroll.min.js"></script>
<script src="../../Scripts/xlsx.full.min.js"></script>
<script src="../../Scripts/fileSaver.min.js"></script>
<script>
	//save config
	function s2ab(s) {
		if (typeof ArrayBuffer !== 'undefined') {
			var buf = new ArrayBuffer(s.length);
			var view = new Uint8Array(buf);
			for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;
			return buf;
		} else {
			var buf = new Array(s.length);
			for (var i = 0; i != s.length; ++i) buf[i] = s.charCodeAt(i) & 0xFF;
			return buf;
		}
	}

	var wopts = {
		bookType: 'xlsx',
		bookSST: false,
		type: 'binary'
	};
</script>
<script>
	new Vue({
		el: '#app',
		data: {
			time: '',
			busy:false,
			over:false,
			exchangeSum:'',
			exchangelist:[],
			screen: {
				__RequestVerificationToken: getToken(),
				Name:'',
				SourceCoinType: '',
				DestCoinType: '',
				STime: '',
				ETime: '',
				PageIndex: 1,
				ShowNumber:20
			},
			options: coinType

		},
		filters: {

		},
		created: function () {
			this.QueryExchangeSummary();
		},
		mounted: function () {
		},
		methods: {
			loadMore:function(){
				this.busy=true;
				var _this = this;
				server.QueryExchange(this.screen, function (rel) {
					if (rel.msg === "StatusOk") {
						rel.data.data.forEach(function(i){
							_this.exchangelist.push(i);
						})
						_this.screen.PageIndex++;
						_this.$nextTick(function(){
							_this.busy = _this.over =!rel.data.data.length;
						})
					} else {
						showTips(getDescriptM(rel.msg))
					}

				});
			},
			QueryExchangeSummary: function () {
				var _this = this;
				server.QueryExchangeSummary({
					__RequestVerificationToken: getToken()
				}, function (rel) {
					if (rel.msg === "StatusOk") {
						_this.exchangeSum = rel.data;
						if(rel.data.length<1){
							showTips('加载完成，暂无数据')
						}
					} else {
						showTips(getDescriptM(rel.msg))
					}
				});
			},
			QueryExchange: function () {
				var _this = this;
				server.QueryExchange(this.screen, function (rel) {
					if (rel.msg === "StatusOk") {
						_this.exchangelist = rel.data.data;
						_this.totalPage = rel.data.Page;
						_this.currentPage = rel.data.current;
					} else {
						showTips(getDescriptM(rel.msg))
					}
				});
			},
			chooseTime: function (val) {
				var aT = val ?val.split(' - '):['', ''];
				this.screen.STime = aT[0];
				this.screen.ETime = aT[1];
			},
			screen1: function () {
				this.screen.PageIndex = 1;
				this.exchangelist=[];
				this.loadMore();
			},
			downloadExl:function () {
				var data= this.exchangelist;
				var userName = this.screen.Name?this.screen.Name:'allUser';
				var time = this.screen.STime?this.screen.STime +'to'+ this.screen.ETime:'allDate';
				var source=this.screen.SourceCoinType?this.screen.SourceCoinType:'all';
				var dest = this.screen.DestCoinType?this.screen.DestCoinType:'all';
				var fileName=time+'_'+userName+'_'+'Source-'+source+'_'+'Dest-'+dest+'_Exchange';
				var wb = {
					SheetNames: ['Sheet1'],
					Sheets: {},
					Props: {}
				};
				wb.Sheets['Sheet1'] = XLSX.utils.json_to_sheet(data); //通过json_to_sheet转成单页(Sheet)数据
				saveAs(new Blob([s2ab(XLSX.write(wb, wopts))], {
					type: "application/octet-stream"
				}), fileName + '.' + (wopts.bookType == "biff2" ? "xls" : wopts.bookType));
			}
		}
	});
</script>